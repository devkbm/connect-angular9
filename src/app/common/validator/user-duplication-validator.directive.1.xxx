import { Directive } from '@angular/core';
import { NG_VALIDATORS, AbstractControl, ValidationErrors, Validator, FormControl, AsyncValidator } from '@angular/forms';
import { UserService } from '../service/user.service';
import { User } from '../model/user-info';
import { ResponseObject } from '../model/response-object';

import { Observable } from 'rxjs';

@Directive({
  selector: '[validUserDuplication]',
  providers: [
    { provide: NG_VALIDATORS, useExisting: UserDuplicationValidatorDirective, multi: true }
  ]
})
export class UserDuplicationValidatorDirective implements AsyncValidator {
  
  constructor(private userService: UserService) { }

  validate(control: AbstractControl): Observable<ValidationErrors> {
    console.log(control.value);

    if (control.value) {
      this.userService
      .checkUser(control.value)
      .subscribe(
        (model: ResponseObject<User>) => {
          return { user: control.value + ' 동일한 아이디가 있습니다.' };
        },
        (err) => {
          
        },
        () => {
          console.log('완료');
        }
      );
      
    }

    return  null;
  }    

}
